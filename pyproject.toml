# General project settings ------------------------------------------------------------
[project]
name = "pymol_remote"
authors = [
    { name="Simon Mathis", email="simon.mathis@gmail.com" },
]
readme = "README.md"
dynamic = ["version"]
license = {file = "LICENSE"}
requires-python = ">=3.8"
dependencies = []
urls = { "Homepage" = "https://github.com/Croydon-Brixton/pymol-remote" }


# Scripts ---------------------------------------------------------------------------
[project.scripts]
pymol_remote = "pymol_remote:launch_pymol_with_rpc"


# Build settings ----------------------------------------------------------------------
[build-system]
requires = [
    "hatchling",
    "hatch-vcs == 0.4",
]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pymol_remote/version.py"


# Formatting & linting settings -------------------------------------------------------
[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "env",
    ".venv",
    "venv",
    "data",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
docstring-code-line-length = 88

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Avoid linting notebooks
exclude = ["*.ipynb"]

# Sort imports
extend-select = ["I"]


# Testing settings --------------------------------------------------------------------
[tool.pytest]
addopts = "--cov=pymol_remote --cov-report=term-missing"
env = [
    "PYTHONPATH=src",
    "PYTEST_DISABLE_PLUGIN_AUTOLOAD=True"
]
env_files = [".env"]

